---
layout: base
title: New Booking
---

<h1>New Booking</h1>

<form id="create-booking-form" class="needs-validation" novalidate>
	<div class="mb-3">
		<label class="form-label">Guest Name</label>
		<input type="text" class="form-control" name="guest_name" required />
	</div>
	<div class="mb-3">
		<label class="form-label">Email</label>
		<input type="email" class="form-control" name="email" required />
	</div>
	<div class="row">
		<div class="col mb-3">
			<label class="form-label">Start Date</label>
			<input type="date" class="form-control" name="start_date" required />
		</div>
		<div class="col mb-3">
			<label class="form-label">End Date</label>
			<input type="date" class="form-control" name="end_date" required />
		</div>
	</div>
	<div class="mb-3">
		<label class="form-label">Status</label>
		<select class="form-select" name="status">
			<option value="pending">Pending</option>
			<option value="confirmed">Confirmed</option>
			<option value="cancelled">Cancelled</option>
		</select>
	</div>
	<button class="btn btn-primary">Create Booking</button>
</form>

<div id="create-result" class="mt-3"></div>

<script>
	document
		.getElementById('create-booking-form')
		.addEventListener('submit', async (e) => {
			e.preventDefault()
			const form = e.currentTarget
			const fd = new FormData(form)
			const payload = Object.fromEntries(fd.entries())

			const res = await fetch('/.netlify/functions/submit-booking', {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify(payload),
			})
			const json = await res.json()

			const out = document.getElementById('create-result')
			if (!res.ok || json.error) {
				out.innerHTML = `<div class="alert alert-danger">Error: ${
					json.error || res.statusText
				}</div>`
				return
			}
			out.innerHTML = `<div class="alert alert-success">Created booking #${json.booking.id}</div>`
			form.reset()
		})
</script>

